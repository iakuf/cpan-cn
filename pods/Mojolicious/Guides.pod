=pod

=encoding utf-8

=head1 文档

Mojolicious::Guides - 魔咒 ( Mojolicious ) 中文指南 

=head1 不要害怕!

我们在不断更新我们的文档，请看
L<Twitter|http://twitter.com/kraih>, L<GitHub|http://github.com/kraih/mojo> 也可以加入官方的 IRC channel C<#mojo> 在 C<irc.perl.org> 来取得最新的更新.

=head1 学习 PERL

如果你从没用过 Perl, 推荐你看看 L<Learn Perl in 2 hours 30 minutes|http://qntm.org/files/perl/perl.html> 这个快速了解的教程, 或者
L<Modern Perl book|http://modernperlbooks.com/books/modern_perl/>, 这个免费提供多种格式可以选择。前面二个都是优秀的介文档.想看更多就看 L<learn.perl.org|http://learn.perl.org/>.

=head1 教程

=over 2

=item L<Mojolicious::Lite>

要想快速的开发和入门可以先看魔咒 ( 我们目前使用的这个框架的中文名称, 取自 Mojo 的发音 ) 中 L<Mojolicious::Lite> 的教程。你学习的所有的东西都可以用在标准的  L<Mojolicious>. 学习这个是先决条件。你必须先看看。这个很象 Dancer ,是基于单文件原型开发使用.

=back

=head1 指南

=over 2

=item L<Mojolicious::Guides::Growing>

使用 L<Mojolicious::Lite> 创建一个原型的应用, 可以让其然后成长成一个结构良好的 L<Mojolicious> 的全功能应用.

=item L<Mojolicious::Guides::Routing>

简单而有趣的介绍 L<Mojolicious> 路径映射到指定的子函数和方法.

=item L<Mojolicious::Guides::Rendering>

生成 L<Mojolicious> 的内容并渲染成显示的 HTML 和其它结构。

=item L<Mojolicious::Guides::Cookbook>

L<Mojolicious> 的 Cookbook, 其中有各种小例子的指南.

=item L<Mojolicious::Guides::Contributing>

做成  L<Mojolicious> 开发者中的一部分

=item L<Mojolicious::Guides::FAQ>

常问的问题的答案

=back

=head1 摘要

L<Mojolicious> 和 L<Mojolicious::Lite> 有很多相同的部分.这些东西象积木一样可以整合，也可以独立使用。 

=over 2

=item L<Mojo::UserAgent>

功能齐全的非阻塞 I/O HTTP 和 WebSocket 的 user agent.

=item L<Mojo::DOM>

迷你 HTML/XML 的 DOM 解析支持使用 CSS 选择器。

=item L<Mojo::JSON>

迷你 JSON 的实现.

=item L<Mojo::Server::Daemon>

功能齐全，高度可移植的非阻塞 I/O HTTP 和 WebSocket 服务器，自重启的功能支持在 L<Mojo::Server::Morbo> 中调用，适合用于开发和测试。

=item L<Mojo::Server::Hypnotoad>

功能齐全，为 UNIX 优化过，preforking 的非阻塞 I/O HTTP服务器和 WebSocket 服务器. 支持可以零停机的软件升级方式（热部署）。

=item L<Mojo::Server::CGI>, L<Mojo::Server::PSGI>

透明的支持 CGI 和 L<PSGI>.

=item L<Mojo::Template>

全部由 Perl 实现的模板系统.

=item L<Mojo::ByteStream>

非常多的方便和便捷的操作字节流的方法.

=item L<Mojolicious::Commands>

L<mojo> script 相关的命令行, 如果你想使用 Dancer 样的功能 $ mojo generate app MojoMvcTutorial 功能时，就去看这个.

=item L<Test::Mojo>

Web 应用开发用的测试驱动的工具包

=item L<ojo>

所有功能的单行的函数

=back


=head1 拆分

这些模块并不一定是 L<Mojolicious> 的一部分. 但是它被设计成使用同一个开发的分支之下.

=over 2

=item L<Mango>

纯 Perl 的非阻塞 I/O 的 MongoDB 驱动

=item L<Minion>

Job queue.

=back

=head1 参考

下面这些是 L<Mojolicious> 中的模块的层次分布.

=over 2

=item * L<Mojo::Base>

=over 2

=item * L<Mojo>

=over 2

=item * L<Mojolicious>

=over 2

=item * L<Mojolicious::Lite>

=over 2

=item * L<Mojo::HelloWorld>

=back

=back

=back

=item * L<Mojo::Cache>

=item * L<Mojo::Cookie>

=over 2

=item * L<Mojo::Cookie::Request>

=item * L<Mojo::Cookie::Response>

=back

=item * L<Mojo::DOM::CSS>

=item * L<Mojo::DOM::HTML>

=item * L<Mojo::Date>

=item * L<Mojo::EventEmitter>

=over 2

=item * L<Mojo::Asset>

=over 2

=item * L<Mojo::Asset::File>

=item * L<Mojo::Asset::Memory>

=back

=item * L<Mojo::Content>

=over 2

=item * L<Mojo::Content::MultiPart>

=item * L<Mojo::Content::Single>

=back

=item * L<Mojo::IOLoop::Client>

=item * L<Mojo::IOLoop::Delay>

=item * L<Mojo::IOLoop::Server>

=item * L<Mojo::IOLoop::Stream>

=item * L<Mojo::Log>

=item * L<Mojo::Message>

=over 2

=item * L<Mojo::Message::Request>

=item * L<Mojo::Message::Response>

=back

=item * L<Mojo::Reactor>

=over 2

=item * L<Mojo::Reactor::Poll>

=over 2

=item * L<Mojo::Reactor::EV>

=back

=back

=item * L<Mojo::Server>

=over 2

=item * L<Mojo::Server::CGI>

=item * L<Mojo::Server::Daemon>

=over 2

=item * L<Mojo::Server::Prefork>

=back

=item * L<Mojo::Server::PSGI>

=back

=item * L<Mojo::Transaction>

=over 2

=item * L<Mojo::Transaction::HTTP>

=item * L<Mojo::Transaction::WebSocket>

=back

=item * L<Mojo::UserAgent>

=item * L<Mojolicious::Plugins>

=back

=item * L<Mojo::Exception>

=item * L<Mojo::Headers>

=item * L<Mojo::Home>

=item * L<Mojo::IOLoop>

=item * L<Mojo::JSON>

=item * L<Mojo::JSON::Pointer>

=item * L<Mojo::Loader>

=item * L<Mojo::Parameters>

=item * L<Mojo::Path>

=item * L<Mojo::Server::Hypnotoad>

=item * L<Mojo::Server::Morbo>

=item * L<Mojo::Template>

=item * L<Mojo::URL>

=item * L<Mojo::Upload>

=item * L<Mojo::UserAgent::CookieJar>

=item * L<Mojo::UserAgent::Proxy>

=item * L<Mojo::UserAgent::Server>

=item * L<Mojo::UserAgent::Transactor>

=item * L<Mojolicious::Command>

=over 2

=item * L<Mojolicious::Command::cgi>

=item * L<Mojolicious::Command::cpanify>

=item * L<Mojolicious::Command::daemon>

=item * L<Mojolicious::Command::eval>

=item * L<Mojolicious::Command::generate::app>

=item * L<Mojolicious::Command::generate::lite_app>

=item * L<Mojolicious::Command::generate::makefile>

=item * L<Mojolicious::Command::generate::plugin>

=item * L<Mojolicious::Command::get>

=item * L<Mojolicious::Command::inflate>

=item * L<Mojolicious::Command::prefork>

=item * L<Mojolicious::Command::psgi>

=item * L<Mojolicious::Command::routes>

=item * L<Mojolicious::Command::test>

=item * L<Mojolicious::Command::version>

=item * L<Mojolicious::Commands>

=over 2

=item * L<Mojolicious::Command::generate>

=back

=back

=item * L<Mojolicious::Controller>

=item * L<Mojolicious::Plugin>

=over 2

=item * L<Mojolicious::Plugin::Charset>

=item * L<Mojolicious::Plugin::Config>

=over 2

=item * L<Mojolicious::Plugin::JSONConfig>

=back

=item * L<Mojolicious::Plugin::DefaultHelpers>

=item * L<Mojolicious::Plugin::EPLRenderer>

=item * L<Mojolicious::Plugin::EPRenderer>

=item * L<Mojolicious::Plugin::HeaderCondition>

=item * L<Mojolicious::Plugin::Mount>

=item * L<Mojolicious::Plugin::PODRenderer>

=item * L<Mojolicious::Plugin::TagHelpers>

=back

=item * L<Mojolicious::Renderer>

=item * L<Mojolicious::Routes::Match>

=item * L<Mojolicious::Routes::Pattern>

=item * L<Mojolicious::Routes::Route>

=over 2

=item * L<Mojolicious::Routes>

=back

=item * L<Mojolicious::Sessions>

=item * L<Mojolicious::Static>

=item * L<Mojolicious::Types>

=item * L<Mojolicious::Validator>

=item * L<Mojolicious::Validator::Validation>

=item * L<Test::Mojo>

=back

=item * L<Mojo::ByteStream>

=item * L<Mojo::Collection>

=item * L<Mojo::DOM>

=item * L<Mojo::Util>

=item * L<ojo>

=back

=head1 MORE

A lot more documentation and examples by many different authors can be found
in the L<Mojolicious wiki|http://github.com/kraih/mojo/wiki>.

=cut
